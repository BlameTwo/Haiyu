<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="Haiyu.Pages.ColorFullGame"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ani="using:CommunityToolkit.WinUI.Animations"
    xmlns:b="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:behaviors="using:Haiyu.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:Haiyu.Models.Enums"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Haiyu.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:Haiyu.Models.ColorFullGame"
    xmlns:ui="using:Haiyu.Controls"
    xmlns:ui1="using:CommunityToolkit.WinUI.Controls"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <ui:TitleBar
            x:Name="title"
            IsExtendsContentIntoTitleBar="True"
            TitleMode="Tall">
            <ui:TitleBar.Header>
                <MenuBar Margin="5,5,0,0">
                    <MenuBarItem Title="文件">
                        <MenuFlyoutItem Text="新文件">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="NewFolder" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="打开">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="OpenFile" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="保存">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Save" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem Text="另存为">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="SaveLocal" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem Text="退出">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Clear" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuBarItem>
                    <MenuBarItem Title="生成棋盘">
                        <MenuFlyoutItem Command="{x:Bind ViewModel.Generator8X12Command}" Text="8X12(鸣潮)" />
                        <MenuFlyoutItem Command="{x:Bind ViewModel.Generator6X6Command}" Text="6X6" />
                        <MenuFlyoutItem Command="{x:Bind ViewModel.Generator10X10Command}" Text="10X10" />
                    </MenuBarItem>
                    <MenuBarItem Title="编辑">
                        <RadioMenuFlyoutItem
                            Command="{x:Bind ViewModel.SetGameModeCommand}"
                            GroupName="GameMode"
                            Text="点染模式">
                            <RadioMenuFlyoutItem.CommandParameter>
                                <enum:GameMode>DotDyeing</enum:GameMode>
                            </RadioMenuFlyoutItem.CommandParameter>
                        </RadioMenuFlyoutItem>
                        <RadioMenuFlyoutItem
                            Command="{x:Bind ViewModel.SetGameModeCommand}"
                            GroupName="GameMode"
                            Text="染色模式">
                            <RadioMenuFlyoutItem.CommandParameter>
                                <enum:GameMode>Dyeing</enum:GameMode>
                            </RadioMenuFlyoutItem.CommandParameter>
                        </RadioMenuFlyoutItem>
                        <RadioMenuFlyoutItem
                            Command="{x:Bind ViewModel.SetGameModeCommand}"
                            GroupName="GameMode"
                            Text="游戏模式">
                            <RadioMenuFlyoutItem.CommandParameter>
                                <enum:GameMode>Game</enum:GameMode>
                            </RadioMenuFlyoutItem.CommandParameter>
                        </RadioMenuFlyoutItem>
                    </MenuBarItem>
                </MenuBar>
            </ui:TitleBar.Header>
        </ui:TitleBar>
        <Grid Grid.Row="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Viewbox Margin="15,0,0,0">
                <Border
                    Padding="15"
                    HorizontalAlignment="Left"
                    Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ThemeResource AccentAAFillColorDefaultBrush}"
                    BorderThickness="2"
                    CornerRadius="5">
                    <ItemsView
                        IsItemInvokedEnabled="True"
                        ItemsSource="{x:Bind ViewModel.GameGrid, Mode=OneWay}"
                        SelectionMode="None">
                        <i:Interaction.Behaviors>
                            <i:EventTriggerBehavior EventName="ItemInvoked">
                                <i:InvokeCommandAction Command="{x:Bind ViewModel.CellClickedCommand}" />
                            </i:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <ItemsView.ItemTransitionProvider>
                            <LinedFlowLayoutItemCollectionTransitionProvider />
                        </ItemsView.ItemTransitionProvider>
                        <ItemsView.ItemTemplate>
                            <DataTemplate x:DataType="model:ColorCell">

                                <ItemContainer>

                                    <Grid
                                        x:Name="grid"
                                        Width="60"
                                        Height="60"
                                        Background="{x:Bind CurrentColor, Mode=OneWay}"
                                        BorderBrush="Transparent"
                                        BorderThickness="2"
                                        CornerRadius="10">

                                        <!--<i:Interaction.Behaviors>
                                            <i:EventTriggerBehavior EventName="PointerEntered">
                                                <i:ControlStoryboardAction>
                                                    <i:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Storyboard.TargetName="grid">
                                                            <ColorAnimation
                                                                EnableDependentAnimation="True"
                                                                Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                                To="{Binding Source={StaticResource AccentAAFillColorDefaultBrush}, Path=Color}"
                                                                Duration="0:0:0.2" />
                                                        </Storyboard>
                                                    </i:ControlStoryboardAction.Storyboard>
                                                </i:ControlStoryboardAction>
                                            </i:EventTriggerBehavior>
                                            <i:EventTriggerBehavior EventName="PointerExited">
                                                <i:ControlStoryboardAction>
                                                    <i:ControlStoryboardAction.Storyboard>
                                                        <Storyboard Storyboard.TargetName="grid">
                                                            <ColorAnimation
                                                                EnableDependentAnimation="True"
                                                                Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                                To="Transparent"
                                                                Duration="0:0:0.2" />
                                                        </Storyboard>
                                                    </i:ControlStoryboardAction.Storyboard>
                                                </i:ControlStoryboardAction>
                                            </i:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>-->

                                        <Grid.BackgroundTransition>
                                            <BrushTransition />
                                        </Grid.BackgroundTransition>

                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="12"
                                            HorizontalTextAlignment="Center">
                                            <Run Text="行" />
                                            <Run Text="{x:Bind Row, Mode=OneWay}" />
                                            <Run Text="列" />
                                            <Run Text="{x:Bind Column, Mode=OneWay}" />
                                        </TextBlock>
                                        <Grid.Transitions>
                                            <TransitionCollection>
                                                <RepositionThemeTransition />
                                            </TransitionCollection>
                                        </Grid.Transitions>
                                    </Grid>
                                </ItemContainer>
                            </DataTemplate>
                        </ItemsView.ItemTemplate>
                        <ItemsView.Layout>
                            <UniformGridLayout
                                MaximumRowsOrColumns="{x:Bind ViewModel.GameColumsSize, Mode=OneWay}"
                                MinColumnSpacing="5"
                                MinRowSpacing="5" />
                        </ItemsView.Layout>
                    </ItemsView>
                </Border>

            </Viewbox>
            <ui1:Segmented
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                ItemsSource="{x:Bind ViewModel.AvailableColors, Mode=OneWay}"
                SelectedItem="{x:Bind ViewModel.SelectAvailableColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Single">
                <ui1:Segmented.ItemTemplate>
                    <DataTemplate x:DataType="model:AvailableColor">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border
                                Width="40"
                                Height="40"
                                Background="{x:Bind Color, Mode=OneWay}"
                                CornerRadius="5" />
                            <!--<TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Text="{x:Bind Name, Mode=OneWay}" />-->
                        </Grid>
                    </DataTemplate>
                </ui1:Segmented.ItemTemplate>
                <ui1:Segmented.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ui1:Segmented.ItemsPanel>
            </ui1:Segmented>
        </Grid>


    </Grid>
</Page>
